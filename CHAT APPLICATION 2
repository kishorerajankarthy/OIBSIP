import socket
import threading
import sys

# Server Configuration
HOST = '127.0.0.1'
PORT = 12345

clients = []  # List to keep track of connected clients

# Broadcast Messages to All Clients
def broadcast(message, sender_socket):
    for client in clients:
        if client != sender_socket:
            client.send(message)

# Handle Client Connections
def handle_client(client_socket):
    while True:
        try:
            message = client_socket.recv(1024)
            if message:
                broadcast(message, client_socket)
            else:
                clients.remove(client_socket)
                client_socket.close()
                break
        except:
            clients.remove(client_socket)
            client_socket.close()
            break

# Start Server
def start_server():
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((HOST, PORT))
    server.listen()
    print(f"Server started on {HOST}:{PORT}")

    while True:
        client_socket, client_address = server.accept()
        print(f"Connected with {client_address}")
        clients.append(client_socket)
        thread = threading.Thread(target=handle_client, args=(client_socket,))
        thread.start()

# Send Messages from Client
def send_messages(client_socket):
    while True:
        message = input()
        if message:
            client_socket.send(message.encode('utf-8'))

# Receive Messages on Client
def receive_messages(client_socket):
    while True:
        try:
            message = client_socket.recv(1024).decode('utf-8')
            if message:
                print(message)
            else:
                break
        except:
            break

# Main Function
def main():
    mode = input("Enter 'server' to start the server or 'client' to start the client: ").strip().lower()
    
    if mode == 'server':
        start_server()
    elif mode == 'client':
        client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        client_socket.connect((HOST, PORT))

        # Start threads for sending and receiving messages
        threading.Thread(target=receive_messages, args=(client_socket,), daemon=True).start()
        send_messages(client_socket)
    else:
        print("Invalid mode. Please enter 'server' or 'client'.")

if __name__ == "__main__":
    main()
